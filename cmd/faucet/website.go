// Code generated by go-bindata. DO NOT EDIT.
// sources:
// faucet.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xe1\x72\xe3\x36\x92\xfe\xed\xad\xda\x77\xe8\xf0\x66\x56\xd2\xd9\x24\x65\x7b\x66\xd6\x27\x91\x4a\xcd\xce\x66\x73\x73\xb5\x97\xa4\x92\x49\xdd\x6d\x65\x53\x57\x20\xd1\x12\x31\x06\x01\x06\x00\x25\x2b\x2e\xbd\xfb\x15\x00\x92\x22\x25\xd9\x33\x13\xcf\xd5\xc5\x3f\x2c\x12\x68\x74\x37\xba\xbf\x46\x37\x00\x26\x5f\xfc\xf5\xdb\x37\xef\xfe\xf1\xdd\x57\x50\x98\x92\x2f\xfe\xf8\x87\xc4\xfe\x02\x27\x62\x95\x06\x28\x82\xc5\x1f\xff\x70\x96\x14\x48\xa8\x7d\x38\x4b\x4a\x34\x04\xf2\x82\x28\x8d\x26\x0d\x6a\xb3\x0c\x6f\x82\x5e\x4f\x61\x4c\x15\xe2\x2f\x35\x5b\xa7\xc1\x7f\x87\x3f\xbe\x0e\xdf\xc8\xb2\x22\x86\x65\x1c\x03\xc8\xa5\x30\x28\x4c\x1a\xbc\xfd\x2a\x45\xba\xc2\xfe\x40\x41\x4a\x4c\x83\x35\xc3\x4d\x25\x95\xe9\xd1\x6e\x18\x35\x45\x4a\x71\xcd\x72\x0c\xdd\xcb\x05\x30\xc1\x0c\x23\x3c\xd4\x39\xe1\x98\x5e\x5a\x3e\x8e\x93\x61\x86\xe3\xe2\xfe\x3e\xfa\x06\xcd\x46\xaa\xdb\xdd\x6e\x06\xaf\x6b\x53\xa0\x30\x2c\x27\x06\x29\xfc\x8d\xd4\x39\x9a\x24\xf6\x94\xcd\x30\xce\xc4\x2d\x14\x0a\x97\x69\x60\xf5\xd7\xb3\x38\xce\xa9\x78\xaf\xa3\x9c\xcb\x9a\x2e\x39\x51\x18\xe5\xb2\x8c\xc9\x7b\x72\x17\x73\x96\xe9\xd8\x6c\x98\x31\xa8\xc2\x4c\x4a\xa3\x8d\x22\x55\x7c\x1d\x5d\x47\x7f\x8e\x73\xad\xe3\xae\x2d\x2a\x99\x88\x72\xad\x03\x50\xc8\xd3\x40\x9b\x2d\x47\x5d\x20\x9a\x00\xe2\xc5\x6f\x14\xbc\x94\xc2\x84\x64\x83\x5a\x96\x18\xbf\x88\xfe\x1c\x4d\x9d\xcc\x7e\xf3\x07\xc4\x3a\xc1\x3a\x57\xac\x32\xa0\x55\xfe\xd1\x92\xdf\xff\x52\xa3\xda\xc6\xd7\xd1\x65\x74\xd9\xbc\x38\x49\xef\x75\xb0\x48\x62\xcf\x70\xf1\x34\xe6\xa1\x90\x66\x1b\x5f\x45\x2f\xa2\xcb\xb8\x22\xf9\x2d\x59\x21\x6d\x45\xd9\xae\xa8\x6d\xfc\x7c\x82\x1f\x72\xe4\xfb\x43\x3f\x7e\x16\x69\xa5\x2c\x51\x98\xe8\xbd\x8e\xaf\xa2\xcb\x9b\x68\xda\x36\x9c\x10\xe0\x45\x58\xdf\x39\x69\x67\xd1\x1a\x95\x05\x31\x0f\x73\x14\x06\x15\xdc\xbb\xe6\xb3\x92\x89\xb0\x40\xb6\x2a\xcc\x0c\x2e\xa7\xd3\xe7\xf3\x93\xcd\xeb\xa2\x69\xa7\x4c\x57\x9c\x6c\x67\xb0\xe4\x78\xd7\xb4\x11\xce\x56\x22\x64\x06\x4b\x3d\x03\xcf\xdd\xf7\xec\xbc\xe4\x4a\xc9\x95\x42\xad\x5b\x91\x95\xd4\xcc\x30\x29\x66\x16\x60\xc4\xb0\x35\x9e\x26\xd7\x15\x11\xc7\x63\x48\xa6\x25\xaf\x0d\x1e\x2a\x94\x71\x99\xdf\x36\x8d\x2e\xcc\x07\xf3\xc9\x25\x97\x6a\x06\x9b\x82\xb5\x23\xc1\x8b\x83\x4a\x61\x2b\x04\x2a\x42\x29\x13\xab\x19\xbc\xaa\xda\xc9\x41\x49\xd4\x8a\x89\x19\x4c\xfb\xc3\x92\xb8\x33\x6d\x12\x37\x8b\x9b\x7d\xce\x24\xdd\x7a\xef\x52\xb6\x86\x9c\x13\xad\xd3\xe0\xc0\xf2\x7e\xd5\x1a\x50\xd8\xc5\x8a\x30\xd1\xf5\x0d\x3a\x95\xdc\x04\xe0\xc4\xa5\x81\x57\x26\xcc\xa4\x31\xb2\x9c\xc1\xa5\xd5\xb3\x1d\x73\xc0\x91\x87\x7c\x15\x5e\x5e\x75\xbd\x67\x49\x71\xd9\xb2\x31\x78\x67\x42\xe7\xb6\xce\x61\xc1\x22\x61\xed\xe0\x25\x81\x25\x09\x33\x62\x8a\x00\x88\x62\x24\x2c\x18\xa5\x28\xd2\xc0\xa8\x1a\x2d\xca\xd8\x02\xfa\x8b\xe4\x03\x6b\x64\x71\xd9\x69\x16\x53\xb6\x6e\xa7\xd6\x7f\x3e\x98\xe6\x23\x33\xb9\x81\xe6\x41\x2e\x97\x1a\x4d\xd8\x9f\x58\x8f\x9a\x89\xaa\x36\xe1\x4a\xc9\xba\xda\x13\x9c\x25\xae\x19\x18\x4d\x83\x5a\xf1\xa0\x49\x16\xee\xd1\x6c\xab\xc6\x20\x41\x37\x7d\xa9\xca\xd0\xba\x44\x49\x1e\x40\xc5\x49\x8e\x85\xe4\x14\x55\x1a\xfc\x20\x73\x46\x38\x08\x3f\x73\xf8\xf1\xfb\xbf\x43\xe3\x3b\x26\x56\xb0\x95\xb5\x82\xbf\x63\x29\xf3\x82\x30\x01\x84\x52\x8b\xe3\x28\x8a\xfa\xaa\x38\x54\x1f\x6b\x1b\x66\x46\xf4\xc8\xce\x92\xac\x36\x46\x76\x94\x99\x11\x90\x19\x11\x52\x5c\x92\x9a\x1b\xa0\x4a\x56\x54\x6e\x44\x68\xe4\x6a\x65\x73\xa3\x9f\x87\x1f\x14\x00\x25\x86\x34\x5d\x69\xd0\xd2\xb6\xce\x24\xba\x92\x55\x5d\x35\xee\xf4\x8d\x78\x57\x11\x41\x91\x5a\xe7\x73\x8d\xc1\xe2\x6b\xb6\x46\x28\xd1\x4d\xe7\xec\x10\x1a\x39\x51\x68\xc2\x3e\xcf\x23\x80\x24\xb1\xd7\xa5\x99\x12\x34\x7f\x49\xcd\x5b\x56\xdd\x14\x4a\x14\x35\x0c\xde\x42\x65\x57\x9e\x60\x71\x7f\xaf\x88\x58\x21\x3c\x63\xf4\xee\x02\x9e\x91\x52\xd6\xc2\xc0\x2c\x85\xe8\xb5\x7b\xd4\xbb\xdd\x90\x3d\x40\xc2\xd9\x22\x21\x8f\x01\x1d\xa4\xc8\x39\xcb\x6f\xd3\xc0\x30\x54\xe9\xfd\xbd\xe5\xbe\xdb\xcd\xe1\xfe\x9e\x2d\xe1\x59\xf4\x3d\xe6\xa4\x32\x79\x41\x76\xbb\x95\x6a\x9f\x23\xbc\xc3\xbc\x36\x38\x9e\xdc\xdf\x23\xd7\xb8\xdb\xe9\x3a\x2b\x99\x19\xb7\xc3\x6d\xbb\xa0\xbb\x9d\x55\xba\x51\x74\xb7\x83\xd8\x32\x15\x14\xef\xe0\x59\xf4\x1d\x2a\x26\xa9\x06\x4f\x9f\xc4\x64\x91\xc4\x9c\x2d\x9a\x71\x07\x66\x8a\x6b\xde\xc3\x4c\x6c\x41\xb3\xc7\xbb\x8b\x20\xa7\x6d\x5f\xd9\x53\xe1\xb0\x0a\xbb\x19\x34\xa0\xd0\xcc\xe0\x2d\x6e\xd3\xe0\xfe\xbe\x3f\xb8\xe9\xcd\x09\xe7\x19\xb1\xb6\xf1\xd3\xeb\x06\xfd\x8a\x16\xad\x6b\xa6\x5d\x25\xb6\x68\x55\xe8\xa9\xfe\xd1\x41\x7e\xb0\x96\x19\x59\xcd\xe0\xfa\xaa\xbf\x90\x9d\x8a\xff\x57\x07\xf1\x7f\x7d\x9a\xba\x22\x02\x39\xb8\xff\xa1\x2e\x09\x6f\x9f\x9b\xb8\xe9\x07\xe2\xe1\xa8\xd0\x2e\xde\x9d\x76\x5d\x2a\x98\xce\x41\xae\x51\x2d\xb9\xdc\xcc\x80\xd4\x46\xce\xa1\x24\x77\x5d\x72\xbc\x9e\x4e\x07\xaa\xdb\x2a\x92\x64\x1c\xdd\x62\xa3\xf0\x97\x1a\xb5\xd1\xdd\xd2\xe2\xbb\xdc\x7f\xbb\xc2\x50\x14\x1a\xe9\x81\x45\xac\x48\x6b\x61\x47\xd5\x07\xc1\xde\xa4\x27\xd5\x5f\x4a\xb9\xcf\x2e\x7d\x4d\x1a\xee\xbd\xa4\x18\x2c\x12\xa3\x7a\x84\x67\x89\xa1\x9f\x94\x1b\x94\x2d\x0f\x1f\x4a\x0d\x7e\x89\xb3\xf3\xaf\x10\x95\x2f\x4b\x2c\x7e\xc1\xbd\x26\xb1\xa1\x4f\x11\x6d\x01\x99\x11\x8d\x1f\x23\xdf\xd5\x04\x7b\xf9\xee\xf5\xc9\x0a\x14\x48\x94\xc9\x90\x98\x8f\xd1\x60\x59\x0b\xda\xb3\x80\x5d\x4d\x9f\xac\x40\x2d\xd8\x1a\x95\x66\x66\xfb\xb1\x1a\x20\xdd\xab\xe0\xdf\x0f\x74\x48\x62\xa3\x3e\x04\xb9\xc1\xdb\xe7\x0b\xf6\x0f\x56\x2d\xd7\x8b\x7f\x97\x1b\xa0\x12\x35\x98\x82\x69\xb0\x99\xf7\xcb\x24\x2e\xae\xf7\x34\xd5\xe2\x9d\xed\xb1\xd6\x85\xa5\xab\x3e\x80\x69\x50\xb5\x70\x69\x59\x0a\x30\x05\x0e\x2b\x96\x26\x83\x47\xf0\x4e\xda\x0a\x70\x8d\xc2\x40\x49\x38\xcb\x99\xac\x35\x90\xdc\x48\xa5\x61\xa9\x64\x09\x78\x57\x90\x5a\x1b\xcb\xc8\x2e\x27\x64\x4d\x18\x77\x61\xe5\x5c\x0b\x52\x01\xc9\xf3\xba\xac\x6d\x25\x2b\x56\x80\x42\xd6\xab\xc2\xab\x62\x24\xf8\x8c\xc5\xa5\x58\x75\xea\xe8\x8a\x94\x40\x8c\x21\xf9\xad\xbe\x80\x76\x89\x00\xa2\x10\x0c\x43\x6a\x47\xe5\xb2\x2c\xa5\x80\x6b\x45\xa1\x22\xca\x6c\x41\x0f\xeb\x0e\x92\xe7\x2e\xfd\x45\xf0\x5a\x6c\xa5\x40\x28\xc8\xda\x29\x08\xef\xfc\x7e\xe4\x02\xbe\x96\x72\xc5\xf1\xdc\xea\xf7\x37\x92\x63\x26\x65\x37\x0c\x4a\xb2\x6d\xe5\x36\xb3\xd8\x30\x53\x30\x6f\xa6\x0a\x55\x69\x79\x50\xe0\xac\x64\x46\x47\x49\x5c\xf5\x96\xda\x7d\xfa\xe6\x61\x21\x15\xfb\xd5\x96\x3f\x7c\xb0\xae\x9a\x83\x15\xa7\x5d\x34\x1d\x02\x38\x2e\xcd\x0c\x5e\xf8\x45\xf3\x10\xd9\xcd\x6e\xea\x14\xac\x5b\x9e\x6e\xa7\x6a\xf3\xd1\x0c\xae\x7d\xf5\xeb\xab\x0d\x6a\xfa\x2a\xd0\x03\xdc\x79\xa9\x37\x37\xd5\x5d\xa7\x48\x57\x43\x4f\x3b\x2e\x16\x0c\x43\xbb\xac\x59\xcf\xa4\x25\xb9\x45\x20\x90\x90\x83\x2d\x77\xa3\xb5\xdb\xab\x31\x77\xea\x10\x9b\x0d\xa2\xf9\xd2\x46\x73\xfa\xbd\x67\xc8\xc4\xea\xf9\xd5\xd4\x83\xd3\x3e\x58\xf6\xcf\xaf\xa6\x4c\x18\xf9\xfc\x6a\x3a\xbd\x9b\x7e\xe4\xdf\xf3\xab\xa9\x14\xcf\xaf\xa6\xa6\xc0\xe7\x57\xd3\xe7\x57\xd7\x7d\x58\xfb\x96\xae\x02\xb5\x64\xa8\xad\xb8\x16\xee\x01\x18\xa2\x56\x68\xd2\xe0\x7f\x48\x26\x6b\x33\xcb\x38\x11\xb7\xc1\xc2\xe9\x6b\x4b\x12\x87\x84\x07\x0a\x59\xa8\x88\xb6\xb8\xb0\x3a\x3b\xa8\x34\x67\x2c\x1a\xc6\xba\x56\x4a\xd6\xc2\x66\x4c\xb0\xb3\x76\xe1\x2a\x46\x16\x6a\xd6\x34\x93\x28\xc9\x54\xbc\x78\x23\xab\x6d\xe8\x98\xb8\xe1\x47\x86\xd4\x75\x55\x49\x65\xa2\xbe\x41\x89\xdd\x3b\x71\xd4\xf1\xcd\xf4\xe5\xcd\xab\x47\xf5\xd7\xb6\x1e\x77\x93\xe8\x34\x24\x99\x5c\x23\xf8\xea\x3f\x93\x77\x40\x04\x85\x25\x53\x08\x64\x43\xb6\x5f\x24\x31\x6d\x36\x6e\x4f\x87\xee\xca\xc5\x5b\x58\xf1\x5a\xdb\x12\x85\xd9\x78\xfd\x7d\xe1\xd8\xaf\x08\xf0\x1d\xaf\xf5\x05\x54\x75\xc6\x99\x2e\x80\x80\xc0\x0d\x24\xda\x28\x29\x56\x0b\xd7\x9a\xdb\xcd\xad\x7b\x85\x4a\x6a\xf3\x28\x22\xb0\xcc\x90\xd2\x13\x98\xf8\x8d\x90\xb0\x02\x9d\x1b\xff\x3f\x5c\xb8\x6c\xd6\xc9\xdf\x97\xdb\xda\xd5\xfb\x77\xeb\xb3\xa3\x30\xde\x6c\x36\x51\x6b\x4b\x17\xc3\x05\xf2\x2a\xb6\x39\xad\x16\xcc\x6c\x63\xbf\x1e\x4a\x11\x7f\xc9\x68\x7a\x75\x73\xf5\xea\xd5\xd5\x8b\x7f\xbb\x79\xf9\xf2\xea\xe6\xc5\xcb\x87\x02\xbc\x03\xc6\x53\xe2\xdb\x6f\x99\xbe\x91\xaf\x6b\x53\xec\xf7\x4b\x1e\x34\x6d\x81\x6e\x0b\x30\x6a\x37\x9d\x2a\xf8\xcd\x40\xaa\x85\x2d\x34\x43\xc2\x4f\x96\x88\x9f\x02\x25\x87\xa5\x47\x54\x7b\x22\xbe\x5a\x0c\x59\xb8\xc8\xda\xd8\x29\xb6\xe7\x38\x4c\x8a\x0e\x53\x17\xa0\x59\x59\xf1\x2d\xe4\x7b\xcf\x3f\x00\xae\x07\x3d\xf3\x41\x6c\x0d\x7d\xe7\x91\xe6\xaa\xba\x52\x52\xb4\xe5\x9c\xae\x75\x8e\x95\xbb\x0a\xb0\x35\xd2\x5f\xb6\xbf\x12\x61\x98\xc0\xb6\x96\x8a\xe0\x5b\xc1\xb7\x50\x6b\x84\xa5\x54\x40\x31\xab\x57\x2b\x57\xff\x29\xa8\x14\x5b\x13\x83\x6d\x01\xa5\x5b\x68\x74\xc0\xe8\x6f\x64\x6d\x41\xcb\xfb\xc5\xe5\x3f\x64\x0d\x39\x11\x60\x14\xc9\x6f\x7d\xc4\xd4\x4a\xd9\x88\xa9\xd0\x4f\xa8\xab\xe2\x32\xe4\x72\xe3\x48\xfc\xd4\x97\x0c\xb9\x2b\xe9\x34\x22\x14\x72\x03\x65\x9d\xbb\xc8\xb4\x25\x9b\x9b\xc7\x86\x30\x03\xb5\x30\x8c\x7b\x9b\x9a\x5a\x09\x5b\x00\xe2\xb0\xf2\x3a\xda\xee\x27\x58\x2e\xde\x15\x78\xa2\xde\xed\xf6\xe9\xa0\xf0\x8d\x27\x87\x4a\x49\x83\xb9\xf5\x2a\x90\x15\x61\x42\x5b\xaf\xb8\xe2\x0e\xcb\x8f\xdb\xc7\xef\x1f\xdb\xa7\xde\x29\xb6\x27\x89\x63\xf8\x9a\xcb\x8c\x70\x58\x5b\xd8\x67\xdc\x96\xec\x12\x0a\x69\x4d\xd0\xb3\x9a\x36\xc4\xd4\x1a\xe4\xd2\xb5\xfa\x09\x38\x06\x6b\xa2\xac\x37\xb1\xac\x0c\xa4\xed\x89\xab\x6d\xd4\xa8\xd6\xed\xa9\xb2\x7d\x37\x0c\xd5\x90\xa2\xf3\x40\x0a\x3f\xfd\x3c\x6f\x82\x3e\x8e\xe1\xaf\xb8\x74\x18\xb1\x88\xf7\xf3\x37\x05\x31\x90\x2b\x24\x06\x35\xe4\x5c\xea\x5a\x79\x3d\xa9\x92\x15\x58\x5d\x5b\x5e\x1d\x73\xdb\x53\x39\x89\x2d\x97\x71\x41\x74\x31\x69\x0f\x8e\x15\x3a\xaf\x75\x9d\x5d\xc7\x99\x45\xe2\xd8\xb2\x60\xe9\x74\x0e\x2c\x69\x59\x47\x1c\xc5\xca\x14\x73\x60\xe7\xe7\x7b\xea\x33\xb6\x84\x71\x4b\xf2\x13\xfb\x39\x32\x77\x91\x15\x04\x69\x0a\x03\x81\x4e\x66\xc3\x49\x57\x9c\xe5\x38\x66\x17\x70\x39\x99\x77\xdd\x99\x42\x72\xdb\xbd\xb6\xbe\x6d\x7e\xfd\xcf\x6e\x7e\x60\x24\xe7\x8d\x81\x99\xfc\x29\x90\x06\x02\x2b\xa6\x0d\xd4\x8a\x43\x13\xdf\xde\x23\x7b\x07\x39\xc2\xbe\x81\x8e\x00\xdb\x3c\x34\x60\xeb\xa6\xe2\x19\x45\x1a\x05\x1d\xff\xc7\x0f\xdf\x7e\x13\x69\xa3\x98\x58\xb1\xe5\x76\x7c\x5f\x2b\x3e\x83\x67\xe3\xe0\x5f\x6a\xc5\x83\xc9\x4f\xd3\x9f\xa3\x35\xe1\x35\x5e\x38\xff\xcf\xdc\xff\x23\x31\x17\xd0\x3c\xce\x60\x28\x71\x37\x99\xcc\x1f\x38\x34\xeb\x9d\xf3\x29\xd4\x68\xc6\x96\x72\x1f\x13\x47\x86\x22\x50\xa2\x29\xa4\x0b\x6c\x85\xb9\x14\x02\x73\x03\x75\x25\x45\x63\x17\xe0\x52\xeb\x1e\x36\x5b\x92\xf4\x04\x46\x9a\x11\xa9\xcb\xea\xff\x85\xd9\x0f\x32\xbf\x45\x33\x1e\x8f\x37\x4c\x50\xb9\x89\xb8\xf4\xcb\x71\x64\x63\x58\xe6\x92\x43\x9a\xa6\xd0\x64\xdb\x60\x02\x5f\x42\xb0\xd1\x36\xef\x06\x30\xb3\x8f\xf6\x69\x02\xe7\x70\x38\xbc\xb0\x85\xc1\x39\x04\x31\xa9\x58\x30\x69\x43\xa4\xb5\xbf\x14\x25\x6a\x4d\x56\xd8\xd7\xd1\xed\x8b\xf7\xa0\xb3\x73\x29\xf5\x0a\x52\x70\x8e\xaa\x88\xd2\xe8\x69\x22\x4a\x0c\xe9\xd0\x67\x51\xec\xe8\xd2\x14\x44\xcd\x79\x0f\xb6\x3e\x52\xe6\x7b\x38\x0e\x87\x44\x3e\x2f\x7d\x91\xa6\x50\x0b\xea\x8c\x4d\x7b\xa3\x2d\x14\xfc\x89\xca\x24\xb2\x39\x64\x3f\x64\x32\x1f\x22\x7c\xc0\x10\xe9\x07\x39\x22\x3d\x64\x89\xf4\x41\x9e\xee\x1c\xeb\x51\x96\xfe\xe0\xab\xc7\xd1\x35\x3c\xc8\x50\xd4\x65\x86\xea\x51\x8e\xfe\x28\xab\xe1\xe8\x2c\xff\x56\x98\xde\xe0\x0b\xb8\x7c\x35\x79\x50\x00\x2a\x25\x1f\xe6\x2f\xa4\xd9\x8e\xef\x39\xd9\xda\x82\x0b\x46\x46\x56\x6f\xdc\xd9\xd3\xe8\xc2\x65\xea\x19\x74\x2c\x2e\xdc\x3d\xc3\x0c\x46\xee\xcd\xf6\xb3\x12\xdd\xa8\x97\xd3\xe9\xf4\x02\xda\xbb\xbb\xbf\x10\x1b\x9e\xaa\xc6\xdd\x83\x2a\xe9\x3a\xcf\x6d\xc5\xf0\x24\xa5\x1a\x26\x9d\x5a\xcd\xfb\x93\x14\xeb\x32\xc9\x40\x33\xf8\xd3\x9f\xe0\xa8\xf7\x00\xdc\x71\x0c\xff\x49\xd4\xad\x3b\x27\xaa\x14\xae\xdd\x59\x52\x37\xa0\x64\x5a\xbb\x43\x1a\x0d\x54\x0a\x6c\x07\x7d\x62\x86\x38\x52\xb3\xa1\x83\x05\x4c\x0f\x75\xb4\x0b\x66\x2f\x83\x9c\x48\x2c\x7d\xc6\x07\x29\xe3\x6c\x37\x10\x39\x18\xcc\x4a\x84\x2f\x52\x08\x82\xc1\xf8\x23\x12\x4b\xb1\xe7\x77\xa6\xd1\xbc\xf3\x5e\x19\x37\x09\xf5\x54\xae\x9b\x5c\xc0\xf5\x74\x3a\x9d\x9c\x50\x64\xd7\x33\xf4\xeb\xca\xd6\x5e\x40\xc4\xd6\xad\x9b\x9d\x95\x5d\x01\x6a\xeb\x28\xbb\xee\x71\xc8\x25\xe7\xbe\xee\x69\xc7\x5a\x53\x37\xe7\x6b\x29\x84\x97\xf3\x53\xa9\xb7\x67\xd3\xfe\x0c\x0f\x5d\x75\xc2\x0d\x47\xee\x1a\x1a\xef\x80\x3a\xbc\x1c\x38\x68\xe0\xbb\x07\x9c\x74\xd6\xe9\xce\x7a\xa6\x3d\xf4\x5d\xcf\x79\xc7\xd6\xeb\x4d\xc3\x33\x3b\xbf\xfc\xd8\xd9\x74\xfd\x55\xad\x8b\xf1\x81\xbe\x93\xa3\x72\xc3\x3a\xea\xad\x41\x65\x4b\x6f\x69\x93\x9c\x75\x8c\xdd\x60\x28\x3c\xf2\x8f\xab\xff\x15\x86\x0a\x05\x45\xd5\xd6\x22\x7e\xbb\x60\x4b\xc9\xa1\xff\xfc\x86\x75\x00\xb0\x4f\x0d\x24\x57\xd8\x49\x81\x00\x00\x07\xc1\xe1\xc0\x3b\x44\xaf\xa5\x46\x4e\x2a\x8d\x14\x52\xf0\xdf\x5d\x8c\x27\x51\x2d\xd8\xdd\x78\x12\x36\xef\x87\x4c\xda\xfe\x79\x6f\x13\xda\xea\x7e\x9e\x42\x90\x18\x05\x8c\xa6\xa3\x00\xce\x4f\x45\xa7\xcd\xd6\xa3\x45\x4f\x89\xfe\x58\x80\xc4\xd0\x85\x3b\x3d\xf7\x9b\xc1\x7f\x06\x19\xc9\x6f\x57\x6e\x93\x35\xb3\xa5\xda\xf8\x88\x2f\x59\x13\x43\x94\x63\x3b\x99\xc3\x9e\xbc\xd9\x86\xe6\xd6\x47\x73\xf0\xfb\x5d\x77\x4a\x0f\xdd\x35\x97\x7b\xcb\xa4\xa2\xa8\x42\x45\x28\xab\xf5\x0c\x5e\x54\x77\xf3\x7f\xb6\x97\x81\xee\x46\xe1\x71\x5d\x2b\x85\x8b\x23\x95\x9a\x33\xe9\x73\x08\x92\xd8\x12\x7c\x90\x4f\x37\xdd\xfe\x57\x1e\x70\xe2\xe6\x04\xba\x0f\x2f\x9a\xf6\x92\x51\xca\xd1\xaa\xdc\xe3\x6f\xe3\xd3\xc2\x60\x10\x65\x43\xa1\xd0\x5c\x9a\xf4\x46\xed\x00\xb9\xc6\xc7\x86\x74\x37\x30\x23\x8b\x84\xd0\xce\x9b\x39\xcb\x37\xfb\x79\xd7\xac\x46\xce\x20\xcd\x67\x3c\xb4\x56\xae\x54\x1b\x87\x0d\xd2\x2e\x60\xa4\x6d\xed\x48\xf5\x68\x12\x15\x75\x49\x04\xfb\x15\xc7\x36\x7d\x4d\xbc\xc1\xdc\x95\x4e\x70\x6a\xcd\x3e\x52\x67\x7f\xcd\x32\x6a\x93\xe1\xa8\x31\xe5\xa8\xf5\xf2\x8b\xfd\x01\xc2\x0c\xa6\xf3\xd1\x27\xdb\xe9\xb4\x9c\x30\x23\x0a\xfa\x2f\x61\x9b\xa7\x41\x49\x2b\xbf\xed\xcb\x88\x1a\xf9\x13\x13\x57\xe7\x0b\xb9\x49\x47\xd7\xd3\x4e\x4d\xef\x70\xe7\xef\x51\x83\xba\x63\x97\x58\x3d\xdb\x40\x5d\xc0\xf5\xf4\xb3\xe8\xeb\x8f\x5d\x0e\xe6\x60\x14\xab\x90\x02\xc9\x0d\x5b\xe3\xff\xc5\x54\x3e\x87\xa1\x3f\x59\x49\x8b\xc7\xd6\x7e\x0e\xae\x03\x8d\x6d\x6f\x67\xde\x7f\xb5\xb1\x07\xb1\x33\xf2\x39\x04\xa7\xa7\xf2\x30\x22\x0f\x49\x0f\x22\xfd\x91\x75\xc0\x5d\x57\x06\xc7\xe9\xc6\x16\xca\xdd\x9d\xfb\x24\x2a\x4c\xc9\xc7\x41\x62\xdc\x57\x59\x56\xf3\x8e\x87\x63\xe1\x9b\x0f\xeb\xc0\xdd\xc1\xb6\x28\xe7\x52\xe3\xc1\xc6\x0d\x7a\xa5\x4c\xb7\xb9\x6b\xeb\x16\xd8\xf5\x3f\x67\x8b\x63\xf8\xc1\x10\x65\x80\xc0\x8f\x6f\xa1\xae\x28\x31\x36\xbb\x49\xb0\x19\xd4\x9f\x79\xb7\xdf\xbb\x65\x44\x69\x58\x4a\xb5\x21\x8a\x36\x27\x42\xa6\xc0\xad\xbb\x19\xec\x2a\x46\x8d\xe6\xad\x5d\xdd\xd6\x84\x8f\x8f\xf7\x92\xcf\xc6\xa3\xa8\xef\xff\xd1\x24\x42\x92\x17\x27\x28\x5d\x42\xeb\x44\xa7\xf0\x8d\xdb\x45\x8c\x9f\x8d\x4d\xc1\xf4\x24\x22\xc6\xa8\xf1\x68\x00\x8d\xd1\xc4\x7a\xf9\xb2\xbf\xc9\xeb\xc6\x27\xc3\x40\x7b\x8c\xcb\xbe\x16\xdf\xd7\x0b\x2d\x7d\xae\xf5\xd8\x03\x6d\x74\xd1\xe3\x3e\xc4\xd9\xe8\xf9\x68\xef\xb3\x7d\xcc\xef\xe7\x92\x9e\x56\x66\xc0\x7c\x64\x43\x6f\x74\xac\x01\xa1\xf4\x8d\x8d\xa9\x71\x70\x22\xfe\x8f\xb1\x32\xd9\x9b\xdd\x2f\xe7\x8f\xdb\xdb\x7f\x0a\xf4\x80\xb1\x19\x1d\x4d\x22\x5d\x67\xfe\xfc\x63\xfc\x72\xbf\x9b\x6b\xe9\x1c\x9e\x0f\x73\xc5\x51\xe9\x61\x65\x0c\xcb\x8f\xf0\xa0\x5c\x79\x24\xad\xb4\x32\x9b\x99\xed\x2e\xac\xe9\xa7\x93\xde\x81\xda\x57\xda\x96\x63\xfe\x1e\x62\x83\x99\x76\xa7\x15\xd0\xc4\x80\x3b\x38\xf2\x07\x44\xaf\xbf\x7b\xdb\x3f\x24\xea\xc2\x64\xec\x45\x74\x9f\xaa\x9e\x3c\x92\x39\xf9\x71\xec\x66\xb3\x89\xfc\x35\x9b\xbb\x55\xe8\xce\x6c\x62\x52\xb1\xe8\xbd\x0e\x80\xe8\xad\xc8\x81\xe2\x12\xd5\xa2\xc7\xbf\x3d\xc8\x49\xe2\xe6\xf3\xcc\x24\x6e\x3e\x55\xff\xdf\x00\x00\x00\xff\xff\xfc\xbc\xbb\xe2\xbc\x2e\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
